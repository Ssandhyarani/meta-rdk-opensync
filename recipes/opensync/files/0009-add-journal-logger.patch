From e604890268ab1e0c2b648581cd0b8a321c543f8c Mon Sep 17 00:00:00 2001
From: Cyprian Lech <clech@plume.com>
Date: Mon, 6 Dec 2021 12:39:34 +0000
Subject: Add journal logger

This patch adds the possibility to log into journal for the platforms that
support systemd.

Signed-off-by: Cyprian Lech <clech@plume.com>
---
 src/lib/log/inc/log.h            |  2 ++
 src/lib/log/kconfig/Kconfig.libs |  7 ++++
 src/lib/log/src/log.c            | 10 ++++++
 src/lib/log/src/log_journal.c    | 58 ++++++++++++++++++++++++++++++++
 src/lib/log/unit.mk              |  2 ++
 5 files changed, 79 insertions(+)
 create mode 100644 src/lib/log/src/log_journal.c

diff --git a/src/lib/log/inc/log.h b/src/lib/log/inc/log.h
index 83791b2f9..392bd054c 100644
--- a/src/lib/log/inc/log.h
+++ b/src/lib/log/inc/log.h
@@ -230,6 +230,7 @@ static inline void __unused_MODULE_ID(void)
 #define LOG_OPEN_STDOUT         (1 << 2)        /* Log to stdout */
 #define LOG_OPEN_STDOUT_QUIET   (1 << 3)        /* Log to stdout is quiet, shows only STDOUT severity messages */
 #define LOG_OPEN_REMOTE         (1 << 4)        /* Log to mqtt */
+#define LOG_OPEN_JOURNAL        (1 << 5)        /* Log to journal */
 
 /*
  * ===========================================================================
@@ -315,5 +316,6 @@ bool logger_syslog_new(logger_t *self);
 bool logger_stdout_new(logger_t *self, bool quiet_mode);
 bool logger_remote_new(logger_t *self);
 bool logger_traceback_new(logger_t *);
+void logger_journal_new(logger_t *self);
 
 #endif /* LOG_H_INCLUDED */
diff --git a/src/lib/log/kconfig/Kconfig.libs b/src/lib/log/kconfig/Kconfig.libs
index 335517f02..b599871c2 100644
--- a/src/lib/log/kconfig/Kconfig.libs
+++ b/src/lib/log/kconfig/Kconfig.libs
@@ -19,4 +19,11 @@ menu "liblog Configuration"
         depends on MANAGER_QM
         help
             Enable support for remote logging via MQTT. This feature requires QM.
+
+    config LOG_JOURNAL
+        bool "Systemd Journal logging"
+        default n
+        help
+            Enable support for systemd's journal logging
+
 endmenu
diff --git a/src/lib/log/src/log.c b/src/lib/log/src/log.c
index f98527181..499c25c74 100644
--- a/src/lib/log/src/log.c
+++ b/src/lib/log/src/log.c
@@ -122,6 +122,7 @@ bool log_open(char *name, int flags)
     {
         flags |= LOG_OPEN_SYSLOG;
         if (isatty(0)) flags |= LOG_OPEN_STDOUT;
+        if (getenv("INVOCATION_ID")) flags |= LOG_OPEN_JOURNAL;
         flags |= LOG_OPEN_REMOTE;
     }
 
@@ -137,6 +138,15 @@ bool log_open(char *name, int flags)
         log_register_logger(&logger_stdout);
     }
 
+#ifdef CONFIG_LOG_JOURNAL
+    static logger_t logger_journal;
+    if (flags & LOG_OPEN_JOURNAL)
+    {
+        logger_journal_new(&logger_journal);
+        log_register_logger(&logger_journal);
+    }
+#endif
+
 #ifdef CONFIG_LOG_REMOTE
     static logger_t logger_remote;
     if (flags & LOG_OPEN_REMOTE)
diff --git a/src/lib/log/src/log_journal.c b/src/lib/log/src/log_journal.c
new file mode 100644
index 000000000..943f27bfe
--- /dev/null
+++ b/src/lib/log/src/log_journal.c
@@ -0,0 +1,58 @@
+#include <systemd/sd-journal.h>
+
+#include "log.h"
+
+static logger_fn_t logger_journal_log;
+
+void logger_journal_new(logger_t *self)
+{
+    memset(self, 0, sizeof(*self));
+
+    self->logger_fn = logger_journal_log;
+}
+
+static void logger_journal_log(logger_t *self, logger_msg_t *msg)
+{
+    int syslog_sev = LOG_DEBUG;
+
+    /* Journal uses syslog severity. Translate logger severity to syslog severity */
+    switch (msg->lm_severity)
+    {
+        case LOG_SEVERITY_EMERG:
+            syslog_sev = LOG_EMERG;
+            break;
+
+        case LOG_SEVERITY_ALERT:
+            syslog_sev = LOG_ALERT;
+            break;
+
+        case LOG_SEVERITY_CRIT:
+            syslog_sev = LOG_CRIT;
+            break;
+
+        case LOG_SEVERITY_ERR:
+            syslog_sev = LOG_ERR;
+            break;
+
+        case LOG_SEVERITY_WARNING:
+            syslog_sev = LOG_WARNING;
+            break;
+
+        case LOG_SEVERITY_NOTICE:
+            syslog_sev = LOG_NOTICE;
+            break;
+
+        case LOG_SEVERITY_INFO:
+            syslog_sev = LOG_INFO;
+            break;
+
+        default:
+            break;
+    }
+
+#if defined(CONFIG_LOG_USE_PREFIX)
+    sd_journal_print(syslog_sev, "%s %s: %s", CONFIG_LOG_PREFIX, msg->lm_tag, msg->lm_text);
+#else
+    sd_journal_print(syslog_sev, "%s: %s", msg->lm_tag, msg->lm_text);
+#endif
+}
diff --git a/src/lib/log/unit.mk b/src/lib/log/unit.mk
index 1faf55d1a..750b0957f 100644
--- a/src/lib/log/unit.mk
+++ b/src/lib/log/unit.mk
@@ -12,12 +12,14 @@ UNIT_SRC  := src/log.c
 UNIT_SRC  += src/log_syslog.c
 UNIT_SRC  += src/log_stdout.c
 UNIT_SRC  += src/log_traceback.c
+UNIT_SRC  += $(if $(CONFIG_LOG_JOURNAL),src/log_journal.c,)
 UNIT_SRC  += $(if $(CONFIG_LOG_REMOTE),src/log_remote.c,)
 
 UNIT_CFLAGS := -I$(UNIT_PATH)/inc
 UNIT_CFLAGS += -Isrc/lib/osa/inc
 
 UNIT_LDFLAGS += -lev
+UNIT_LDFLAGS += $(if $(CONFIG_LOG_JOURNAL),-lsystemd,)
 
 UNIT_EXPORT_CFLAGS := $(UNIT_CFLAGS)
 UNIT_EXPORT_LDFLAGS := $(UNIT_LDFLAGS)
-- 
2.25.1

