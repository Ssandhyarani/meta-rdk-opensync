From 95b2ee6db408ca9092d1cfd9a78c9d99dd5f00c2 Mon Sep 17 00:00:00 2001
From: Cyprian Lech <clech@plume.com>
Date: Tue, 29 Oct 2019 11:00:34 +0000
Subject: [PATCH 3/3] Use osync_hal in
 inet_gretap

RDK platform abstracts GRE tunneling. Those platform also need parent
interface mapping.
---
 src/lib/inet/src/linux/inet_gretap.c | 58 ++++++++----------------------------
 1 file changed, 13 insertions(+), 45 deletions(-)

diff --git a/src/lib/inet/src/linux/inet_gretap.c b/src/lib/inet/src/linux/inet_gretap.c
index fcc62c0..cd4d420 100644
--- a/src/lib/inet/src/linux/inet_gretap.c
+++ b/src/lib/inet/src/linux/inet_gretap.c
@@ -18,12 +18,9 @@
 
 #include "execsh.h"
 
-#if !defined(CONFIG_USE_KCONFIG) && !defined(CONFIG_INET_GRE_USE_SOFTWDS)
-/* Default to gretap */
-#define CONFIG_INET_GRE_USE_GRETAP
-#endif
+#include "target.h"
+#include "osync_hal.h"
 
-#if defined(CONFIG_INET_GRE_USE_GRETAP)
 /*
  * inet_gretap_t was selected as the default tunnelling
  * implementation -- return an instance with inet_gretap_new()
@@ -40,7 +37,6 @@ inet_t *inet_gre_new(const char *ifname)
 
     return inet_gretap_new(ifname);
 }
-#endif
 
 /*
  * ===========================================================================
@@ -133,41 +129,11 @@ bool inet_gretap_ip4tunnel_set(
  * ===========================================================================
  */
 
-/*
- * $1 - interface name
- * $2 - parent interface name
- * $3 - local address
- * $4 - remote address
- */
-static char gre_create_gretap[] =
-_S(
-    if [ -e "/sys/class/net/$1" ];
-    then
-        ip link del "$1";
-    fi;
-    ip link add "$1" type gretap local "$3" remote "$4" dev "$2" tos 1;
-#ifdef WAR_GRE_MAC
-    /* Set the same MAC address for GRE as WiFI STA and enable locally administered bit */
-    [ -z "$(echo $1 | grep g-)" ] || ( addr="$(cat /sys/class/net/$2/address)" && a="$(echo $addr | cut -d : -f1)" && b="$(echo $addr | cut -d : -f2-)" && c=$(( 0x$a & 2 )) && [ $c -eq 0 ] && c=$(( 0x$a | 2 )) && d=$(printf "%x" $c) && ifconfig "$1" hw ether "$d:$b";)
-#endif
-);
-
-/*
- * $1 - interface name, always return success
- */
-static char gre_delete_gretap[] =
-_S(
-    [ ! -e "/sys/class/net/$1" ] && exit 0;
-    ip link del "$1"
-);
-
-
 /**
  * Create/destroy the GRETAP interface
  */
 bool inet_gretap_interface_start(inet_gretap_t *self, bool enable)
 {
-    int status;
     char slocal_addr[C_IP4ADDR_LEN];
     char sremote_addr[C_IP4ADDR_LEN];
 
@@ -194,15 +160,18 @@ bool inet_gretap_interface_start(inet_gretap_t *self, bool enable)
         snprintf(slocal_addr, sizeof(slocal_addr), PRI_osn_ip_addr, FMT_osn_ip_addr(self->in_local_addr));
         snprintf(sremote_addr, sizeof(sremote_addr), PRI_osn_ip_addr, FMT_osn_ip_addr(self->in_remote_addr));
 
-        status = execsh_log(LOG_SEVERITY_INFO, gre_create_gretap,
-                self->inet.in_ifname,
-                self->in_ifparent,
-                slocal_addr,
-                sremote_addr);
+        if (osync_hal_inet_create_gre(self->inet.in_ifname, slocal_addr, sremote_addr,
+                    target_map_ifname_to_gre_bridge(self->in_ifparent), 1) != OSYNC_HAL_SUCCESS)
+        {
+            LOG(ERR, "inet_gretap: %s: cannot create GRE interface", self->inet.in_ifname);
+            return false;
+        }
 
-        if (!WIFEXITED(status) || WEXITSTATUS(status) != 0)
+        if (osync_hal_inet_add_to_bridge(self->inet.in_ifname,
+                     target_map_ifname_to_bridge(self->in_ifparent)) != OSYNC_HAL_SUCCESS)
         {
-            LOG(ERR, "inet_gretap: %s: Error creating GRETAP interface.", self->inet.in_ifname);
+            LOG(ERR, "inet_gretap: %s: cannot add GRE interface to bridge %s", self->inet.in_ifname,
+                    target_map_ifname_to_bridge(self->in_ifparent));
             return false;
         }
 
@@ -210,8 +179,7 @@ bool inet_gretap_interface_start(inet_gretap_t *self, bool enable)
     }
     else
     {
-        status = execsh_log(LOG_SEVERITY_INFO, gre_delete_gretap, self->inet.in_ifname);
-        if (!WIFEXITED(status) || WEXITSTATUS(status) != 0)
+        if (osync_hal_inet_destroy_gre(self->inet.in_ifname) != OSYNC_HAL_SUCCESS)
         {
             LOG(ERR, "inet_gretap: %s: Error deleting GRETAP interface.", self->inet.in_ifname);
         }
-- 
1.9.1

