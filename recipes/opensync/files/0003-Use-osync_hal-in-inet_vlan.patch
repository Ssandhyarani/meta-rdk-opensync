From 7a913073001acf24a53fe9a4693877cef680f84e Mon Sep 17 00:00:00 2001
From: Cyprian Lech <clech@plume.com>
Date: Mon, 27 Apr 2020 11:39:36 +0000
Subject: [PATCH 3/5] Use osync_hal in inet_vlan

RDK platform abstracts vlans creation/destruction.
---
 src/lib/inet/src/linux/inet_vlan.c | 60 +++++++-----------------------
 1 file changed, 14 insertions(+), 46 deletions(-)

diff --git a/src/lib/inet/src/linux/inet_vlan.c b/src/lib/inet/src/linux/inet_vlan.c
index 463dc1c..d35ad19 100644
--- a/src/lib/inet/src/linux/inet_vlan.c
+++ b/src/lib/inet/src/linux/inet_vlan.c
@@ -41,6 +41,8 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #include "inet.h"
 #include "inet_base.h"
 #include "inet_vlan.h"
+#include "osync_hal.h"
+#include "target.h"
 
 #include "execsh.h"
 
@@ -164,43 +166,12 @@ bool inet_vlan_service_commit_impl(
  * ===========================================================================
  */
 
-/*
- * Built-in shell script for creating VLAN interfaces
- *
- * $1 - interface name
- * $2 - parent interface name
- * $3 - vlanid
- */
-static char vlan_create_interface[] =
-_S(
-    if [ -e "/sys/class/net/$1" ];
-    then
-        ip link del "$1";
-    fi;
-    ip link add link "$2" name "$1" type vlan id "$3"
-);
-
-/*
- * Built-in shell script for deleting VLAN interfaces
- *
- * $1 - interface name, always return success
- */
-static char vlan_delete_interface[] =
-_S(
-    [ ! -e "/sys/class/net/$1" ] && exit 0;
-    ip link del "$1"
-);
-
-
 /*
  * Implement the INET_UNIT_INTERFACE service; this is responsible for
  * creating/destroying the interface
  */
 bool inet_vlan_interface_start(inet_vlan_t *self, bool enable)
 {
-    int status;
-    char svlanid[11];   /* Number of characters to represent an int */
-
     if (enable)
     {
         if (self->vlan_parent[0] == '\0')
@@ -215,31 +186,28 @@ bool inet_vlan_interface_start(inet_vlan_t *self, bool enable)
             return false;
         }
 
-        snprintf(svlanid, sizeof(svlanid), "%d", self->vlan_id);
-
-        status = execsh_log(
-                LOG_SEVERITY_INFO,
-                vlan_create_interface,
-                self->inet.in_ifname,
-                self->vlan_parent,
-                svlanid);
-        if (!WIFEXITED(status) || WEXITSTATUS(status) != 0)
+        if (osync_hal_inet_create_vlan(self->vlan_parent, self->vlan_id) != OSYNC_HAL_SUCCESS)
         {
             LOG(ERR, "inet_vlan: %s: Error creating VLAN interface.", self->inet.in_ifname);
             return false;
         }
 
+        if (osync_hal_inet_add_to_bridge(self->inet.in_ifname,
+                    target_map_vlan_to_bridge(self->vlan_id)) != OSYNC_HAL_SUCCESS)
+        {
+            LOG(ERR, "inet_vlan: %s: cannot add vlan interface to bridge %s", self->inet.in_ifname,
+                    target_map_ifname_to_bridge(self->vlan_parent));
+            return false;
+        }
+
         LOG(INFO, "inet_vlan: %s: VLAN interface was successfully created.", self->inet.in_ifname);
     }
     else
     {
-        status = execsh_log(
-                LOG_SEVERITY_INFO,
-                vlan_delete_interface,
-                self->inet.in_ifname);
-        if (!WIFEXITED(status) || WEXITSTATUS(status) != 0)
+        if (osync_hal_inet_destroy_vlan(self->inet.in_ifname) != OSYNC_HAL_SUCCESS)
         {
-            LOG(ERR, "inet_vlan: %s: Error deleting VLAN interface.", self->inet.in_ifname);
+            LOG(ERR, "inet_vlan: %s: Error creating VLAN interface.", self->inet.in_ifname);
+            return false;
         }
 
         LOG(INFO, "inet_vlan: %s: VLAN interface was successfully deleted.", self->inet.in_ifname);
-- 
2.25.1

